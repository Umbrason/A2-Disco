#pragma kernel lights
uniform float3 iResolution;
uniform float  iTime;

Texture2D _Tex;
SamplerState sampler_Tex;

StructuredBuffer<float2> _Positions;
RWStructuredBuffer<float3> _Colors;


float3 main(float2 position)
{
    float aspect = iResolution.x / iResolution.y;
    float2 uv = position / iResolution;
    uv.x *= aspect;
    uv.x += (1 - aspect) / 2;
    float4 color = _Tex.SampleLevel(sampler_Tex, uv, 0);
    return color.xyz * color.a;
}

[numthreads(1,1,1)]
void lights (uint3 dtid : SV_DispatchThreadID)
{
    float3 color = main(_Positions[dtid.x]);
    _Colors[dtid.x] = color;
}